# -------- BACKEND --------
apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend-kouventa-deployment
  namespace: default
  labels:
    app: backend-kouventa
spec:
  replicas: 3
  selector:
    matchLabels:
      app: backend-kouventa
  template:
    metadata:
      labels:
        app: backend-kouventa
    spec:
      securityContext:
        runAsUser: 0
        runAsGroup: 0
        fsGroup: 2000
      # Add this section to reference the private registry secret
      imagePullSecrets:
        - name: regcred
      containers:
        - name: backend-kouventa-container
          image: hakaes/f9cozoxjvpzx:jenkins_230
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 3000
              protocol: TCP
          env:
            - name: ENV
              value: "prod"
            - name: DB_HOST
              value: "postgres-service"
            - name: DB_PORT
              value: "5432"
            - name: DB_USER
              value: "rootkou"
            - name: DB_PASSWORD
              value: "zero_two2025"
            - name: DB_NAME
              value: "kouventa-db"
            - name: DB_SSLMODE
              value: "disable"
            - name: DB_SU_HOST
              value: "postgres-service"
            - name: DB_SU_PORT
              value: "5432"
            - name: DB_SU_USER
              value: "rootkou"
            - name: DB_SU_PASSWORD
              value: "zero_two2025"
            - name: DB_SU_NAME
              value: "kouventa-su-db"
            - name: DB_SU_SSLMODE
              value: "disable"
            - name: URL_FRONTEND
              value: "https://kou2-fe.azurewebsites.net"
            - name: URL_BACKEND
              value: "https://pale-round-duck-cabinet.trycloudflare.com"
            - name: CONFIG_AUTH_EMAIL
              value: "aegr02adm@gmail.com"
            - name: CONFIG_AUTH_PASSWORD
              value: "zptjuepnlvjsdscp"
            - name: AI_API_KEY
              value: "2m+UaHSgPZWD/8DuvUBAsAH/v9OHXmU1yj7iKaFkPU0jo85Y"
            - name: AI_API_VERSION
              value: "v1"
            - name: LIMITER_MAX
              value: "100"
            - name: LIMITER_EXPIRATION
              value: "30"
            - name: KEY_ID
              value: "7faf5fab4f6961cb47e3308b374a4960"
            - name: UNIQUE_KEY_ID
              value: "db92905a177f134ecfe2"
            - name: JWT_PRIVATE_KEY_PATH
              value: /pkg/keys/private.pem
            - name: JWT_PUBLIC_KEY_PATH
              value: /pkg/keys/public.pem
            - name: PATH_FIREBASE_SA
              value: /app/configs/firebase_sa.json
          resources:
            requests:
              cpu: "100m"
              memory: "128Mi"
            limits:
              cpu: "500m"
              memory: "256Mi"
---
apiVersion: v1
kind: Service
metadata:
  name: backend-kouventa-service
  namespace: default
  labels:
    app: backend-kouventa
spec:
  type: LoadBalancer
  selector:
    app: backend-kouventa
  ports:
    - name: http
      protocol: TCP
      port: 80
      targetPort: 3000

---
# Deployment untuk container PostgreSQL
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres-deployment
  namespace: default
  labels:
    app: postgres
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
        - name: postgres-container
          image: postgres:13
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 5432
          env:
            - name: POSTGRES_USER
              value: "rootkou"
            - name: POSTGRES_PASSWORD
              value: "zero_two2025"
            - name: POSTGRES_DB
              value: "kouventa-db"
            - name: POSTGRES_MULTIPLE_DATABASES
              value: "kouventa-db,kouventa-su-db"

---
apiVersion: v1
kind: Service
metadata:
  name: postgres-service
  namespace: default
  labels:
    app: postgres
spec:
  # Changed the type to LoadBalancer to make it externally accessible.
  type: LoadBalancer
  selector:
    app: postgres
  ports:
    - protocol: TCP
      port: 5432
      targetPort: 5432

---
apiVersion: v1
kind: Secret
metadata:
  name: regcred
  namespace: default
type: kubernetes.io/dockerconfigjson
data:
  .dockerconfigjson: ewoJImF1dGhzIjogewoJCSJodHRwczovL2luZGV4LmRvY2tlci5pby92MS8iOiB7fSwKCQkiaHR0cHM6Ly9pbmRleC5kb2NrZXIuaW8vdjEvYWNjZXNzLXRva2VuIjoge30sCgkJImh0dHBzOi8vaW5kZXguZG9ja2VyLmlvL3YxL3JlZnJlc2gtdG9rZW4iOiB7fQoJfSwKCSJjcmVkc1N0b3JlIjogImRlc2t0b3AiLAoJImN1cnJlbnRDb250ZXh0IjogImRlc2t0b3AtbGludXgiLAoJInBsdWdpbnMiOiB7CgkJIi14LWNsaS1oaW50cyI6IHsKCQkJImVuYWJsZWQiOiAidHJ1ZSIKCQl9LAoJCSJkZWJ1ZyI6IHsKCQkJImhvb2tzIjogImV4ZWMiCgkJfSwKCQkic2NvdXQiOiB7CgkJCSJob29rcyI6ICJwdWxsLGJ1aWxkeCBidWlsZCIKCQl9Cgl9LAoJImZlYXR1cmVzIjogewoJCSJob29rcyI6ICJ0cnVlIgoJfQp9
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: backend-kouventa
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/service-upstream: "true"
spec:
  rules:
    - host: backend-kouventa.local
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: backend-kouventa-service
                port:
                  number: 80
---
# -------- FRONTEND --------
apiVersion: fronted
kind: Deployment
metadata:
  name: frontend-kouventa-deployment
  namespace: default
  labels:
    app.kubernetes.io/name: frontend-kouventa
spec:
  replicas: 2
  selector:
    matchLabels:
      app: frontend-kouventa # Matches the template's app label
  template:
    metadata:
      labels:
        app: frontend-kouventa
    spec:
      imagePullSecrets:
        - name: cred-secret
      containers:
        - name: frontend-kouventa-container
          image: hakaes/hkasdas0fzxf123:frontend_22
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 3000
              protocol: TCP
          resources:
            requests:
              cpu: "100m"
              memory: "128Mi"
            limits:
              cpu: "500m"
              memory: "256Mi"
          securityContext:
            allowPrivilegeEscalation: false
            runAsNonRoot: true
            runAsUser: 10001
            capabilities:
              drop:
                - "ALL"
---
apiVersion: v1
kind: Service
metadata:
  name: frontend-kouventa-service
  namespace: default
  labels:
    app.kubernetes.io/name: frontend-kouventa
spec:
  type: LoadBalancer
  selector:
    app: frontend-kouventa # Should match the Deployment's pod template label
  ports:
    - name: http
      protocol: TCP
      port: 80 # Service port
      targetPort: 3000 # Container port
---
apiVersion: v1
kind: Secret
metadata:
  name: cred-secret
  namespace: default
type: kubernetes.io/dockerconfigjson
data:
  .dockerconfigjson: eyJhdXRocyI6eyJodHRwczovL2luZGV4LmRvY2tlci5pby92MS8iOnt9LCJodHRwczovL2luZGV4LmRvY2tlci5pby92MS9hY2Nlc3MtdG9rZW4iOnt9LCJodHRwczovL2luZGV4LmRvY2tlci5pby92MS9yZWZyZXNoLXRva2VuIjp7fX0sImNyZWRzU3RvcmUiOiJkZXNrdG9wIiwiY3VycmVudENvbnRleHQiOiJkZXNrdG9wLWxpbnV4IiwicGx1Z2lucyI6eyJweC1jbGktaGludHMiOnsiZW5hYmxlZCI6InRydWUifSwiZGVidWciOnsiaG9va3MiOiJleGVjIn0sInNjb3V0Ijp7Imhvb2tzIjoicHVsbCxidWlsZCBidWlsZCJ9fSwiZmVhdHVyZXMiOnsiaG9va3MiOiJ0cnVlIn19 # Base64 encoded docker config json
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: frontend-kouventa
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/service-upstream: "true"
spec:
  rules:
    - host: kouventa.local
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: frontend-kouventa-service
                port:
                  number: 80 # This should be the Service's port, not the targetPort

