apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend-kouventa-deployment
  namespace: default
  labels:
    app: backend-kouventa
spec:
  replicas: 2
  selector:
    matchLabels:
      app: backend-kouventa
  template:
    metadata:
      labels:
        app: backend-kouventa
    spec:
      containers:
        - name: backend-kouventa-container
          image: hakaes/f9cozoxjvpzx:61
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          env:
            - name: DB_HOST
              value: "postgres-service"
            - name: DB_PORT
              value: "5432"
            - name: DB_USER
              value: "rootkou"
            - name: DB_PASSWORD
              value: "zero_two2025"
            - name: DB_NAME
              value: "kouventa-db"
            - name: DB_SSLMODE
              value: "disable"
            - name: DB_SU_HOST
              value: "postgres-service"
            - name: DB_SU_PORT
              value: "5432"
            - name: DB_SU_USER
              value: "rootkou"
            - name: DB_SU_PASSWORD
              value: "zero_two2025"
            - name: DB_SU_NAME
              value: "kouventa-su-db"
            - name: DB_SU_SSLMODE
              value: "disable"
            - name: URL_FRONTEND
              value: "https://kou2-fe.azurewebsites.net"
            - name: URL_BACKEND
              value: "https://pale-round-duck-cabinet.trycloudflare.com"
            - name: CONFIG_AUTH_EMAIL
              value: "aegr02adm@gmail.com"
            - name: CONFIG_AUTH_PASSWORD
              value: "zptjuepnlvjsdscp"
            - name: AI_API_KEY
              value: "2m+UaHSgPZWD/8DuvUBAsAH/v9OHXmU1yj7iKaFkPU0jo85Y"
            - name: AI_API_VERSION
              value: "v1"
            - name: LIMITER_MAX
              value: "100"
            - name: LIMITER_EXPIRATION
              value: "30"
            - name: KEY_ID
              value: "7faf5fab4f6961cb47e3308b374a4960"
            - name: UNIQUE_KEY_ID
              value: "db92905a177f134ecfe2"
            - name: JWT_PRIVATE_KEY_PATH
              value: /pkg/keys/private.pem
            - name: JWT_PUBLIC_KEY_PATH
              value: /pkg/keys/public.pem

          livenessProbe:
            httpGet:
              path: /healthz
              port: http
            initialDelaySeconds: 15
            periodSeconds: 20
          readinessProbe:
            httpGet:
              path: /ready
              port: http
            initialDelaySeconds: 5
            periodSeconds: 10
          resources:
            requests:
              cpu: "100m"
              memory: "128Mi"
            limits:
              cpu: "500m"
              memory: "256Mi"
          securityContext:
            allowPrivilegeEscalation: false
            runAsNonRoot: true
            runAsUser: 10001
            capabilities:
              drop:
                - "ALL"

---
apiVersion: v1
kind: Service
metadata:
  name: backend-kouventa-service
  namespace: default
  labels:
    app: backend-kouventa
spec:
  type: LoadBalancer
  selector:
    app: backend-kouventa
  ports:
    - name: http
      protocol: TCP
      port: 80
      targetPort: 8080

---
# Deployment untuk container PostgreSQL
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres-deployment
  namespace: default
  labels:
    app: postgres
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
        - name: postgres-container
          image: postgres:13
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 5432
          env:
            - name: POSTGRES_USER
              value: "rootkou"
            - name: POSTGRES_PASSWORD
              value: "zero_two2025"
            - name: POSTGRES_DB
              value: "kouventa-db"
            - name: POSTGRES_MULTIPLE_DATABASES
              value: "kouventa-db,kouventa-su-db"
          # Menambahkan volume mount untuk skrip inisialisasi
          volumeMounts:
            - name: postgres-init-volume
              mountPath: /docker-entrypoint-initdb.d
      # Menambahkan volume yang merujuk ke ConfigMap
      volumes:
        - name: postgres-init-volume
          configMap:
            name: postgres-init-db-configmap
            defaultMode: 0755
---
apiVersion: v1
kind: Service
metadata:
  name: postgres-service
  namespace: default
  labels:
    app: postgres
spec:
  type: ClusterIP
  selector:
    app: postgres
  ports:
    - protocol: TCP
      port: 5432
      targetPort: 5432
---
# ConfigMap untuk skrip inisialisasi database
apiVersion: v1
kind: ConfigMap
metadata:
  name: postgres-init-db-configmap
  namespace: default
data:
  # Skrip shell untuk menjalankan SQL di setiap database
  init-dbs.sh: |
    #!/bin/sh
    set -e

    echo "Menjalankan skrip inisialisasi untuk 'kouventa-db'..."
    psql -v ON_ERROR_STOP=1 --username "$POSTGRES_USER" --dbname "kouventa-db" <<-EOSQL
        -- Skema tabel untuk kouventa-db
        CREATE TABLE IF NOT EXISTS users (
            id SERIAL PRIMARY KEY,
            username VARCHAR(50) UNIQUE NOT NULL,
            email VARCHAR(100) UNIQUE NOT NULL,
            created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()
        );
        -- Tambahkan skema tabel lain untuk kouventa-db di sini
    EOSQL

    echo "Menjalankan skrip inisialisasi untuk 'kouventa-su-db'..."
    psql -v ON_ERROR_STOP=1 --username "$POSTGRES_USER" --dbname "kouventa-su-db" <<-EOSQL
        -- Skema tabel untuk kouventa-su-db
        CREATE TABLE IF NOT EXISTS super_admins (
            id SERIAL PRIMARY KEY,
            name VARCHAR(50) NOT NULL,
            email VARCHAR(100) UNIQUE NOT NULL,
            last_login TIMESTAMP WITH TIME ZONE
        );
        -- Tambahkan skema tabel lain untuk kouventa-su-db di sini
    EOSQL